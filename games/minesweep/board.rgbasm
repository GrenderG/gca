include "board.rgbinc"
include "memory.rgbinc"

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; exports
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

export Board_ConvertLogicalToBoardStateCoordinate, Board_ConvertOamToBoardStateCoordinate
export Board_RequestBoardTileChange, Board_ProcessBoardTileChangeRequest

section "board", rom0

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; coordinates
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; convert the logical coordinate in (b) into a board state coordinate
; save the result coordinate into (hl)
Board_ConvertLogicalToBoardStateCoordinate:
	; reset (hl)
	ld hl, $0000

	; add the row contribution
	ld a, b
	and a, ~(BOARD_TILE_NUM_X - 1)
	ld_r16_r8 de, a
	sla_r16 de
	add hl, de

	; add the column contribution
	ld a, b
	and a, (BOARD_TILE_NUM_X - 1)
	ld_r16_r8 de, a
	add hl, de

	ret

; convert the OAM coordinate in (de) into a board state coordinate
; save the result coordinate into (hl)
Board_ConvertOamToBoardStateCoordinate:
	; reset (hl)
	ld hl, $0000

	; compute the row contribution and put it into (hl)
	ld a, e
	add a, -(OAM_Y_OFS + BOARD_TILE_OFFSET_Y * TILE_SIDE)
	ld_r16_r8 hl, a
	; equivalent to ((a / TILE_SIDE) * SCRN_VX_B)
	sla_r16 hl
	sla_r16 hl

	; compute the column contribution and add to (hl)
	ld a, d
	add a, -(OAM_X_OFS + BOARD_TILE_OFFSET_X * TILE_SIDE)
	; equivalent to (a / TILE_SIDE)
	rrca
	rrca
	rrca
	ld_r16_r8 de, a
	add hl, de
	
	ret

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Tile graphics change
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; request a tile change for board state coordinate (hl) to value (a)
Board_RequestBoardTileChange:
	; set the tile value
	ld [HRAM_BOARD_TILE_REQUEST_VALUE], a

	; set the tile address
	ld de, _SCRN0 + (BOARD_TILE_OFFSET_Y * SCRN_VX_B) + BOARD_TILE_OFFSET_X
	add hl, de
	store16 HRAM_BOARD_TILE_REQUEST_ADDRESS, hl

	ret

; perform tile change if requested (high byte is non-zero)
Board_ProcessBoardTileChangeRequest:
	load16 hl, HRAM_BOARD_TILE_REQUEST_ADDRESS
	ld a, h
	or a
	jr z, .no_tile_operation
		; set the vram value
		ld a, [HRAM_BOARD_TILE_REQUEST_VALUE]
		ld [hl], a

		; reset tile change by zero clearing the high byte
		xor a
		ld [HRAM_BOARD_TILE_REQUEST_ADDRESS + 1], a
	.no_tile_operation

	ret

